/***********************************************************************************************************************
* DISCLAIMER
* This software is supplied by Renesas Electronics Corporation and is only 
* intended for use with Renesas products. No other uses are authorized. This 
* software is owned by Renesas Electronics Corporation and is protected under 
* all applicable laws, including copyright laws.
* THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING 
* THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT 
* LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE 
* AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.
* TO THE MAXIMUM EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS 
* ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
* FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR 
* ANY REASON RELATED TO THIS SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE 
* BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
* Renesas reserves the right, without notice, to make changes to this software 
* and to discontinue the availability of this software. By using this software, 
* you agree to the additional terms and conditions found by accessing the 
* following link:
* http://www.renesas.com/disclaimer
*
* Copyright (C) 2013 Renesas Electronics Corporation. All rights reserved.
***********************************************************************************************************************/

/***********************************************************************************************************************
* File Name    : Description.txt
* Version      : Applilet4 for RL78/L13 V1.00.00.02 [10 May 2013]
* Device(s)    : R5F10WMG
* Tool-Chain   : CA78K0R
* H/W Platform : RSKRL78L13
* Note         : Application Leading Tool (Applilet) is used to generate code 
*                for this sample program.  The name Applilet is used hereafter.
*                The Applilet details and version number are given in the file 
*                header for each relevant module.
* Description  : This sample demonstrates usage of the Serial Array Unit (SAU) 
*                in synchronous mode by performing a loop back test between two 
*                SAU0 channels (CSI00 & CSI10).
*
* Option Bytes : Option bytes for the microcontroller are set in the CubeSuite+ IDE. Select the build tool in the 
*                project tree window, click the link options tab and open the "Device" section. 
*                The default option byte value is 0xEFFFF0
*          
* Modifications: The following modifications are required to connect the serial channels. 
                
*                Please refer to the schematics document and component placement 
*                diagram in the User Manual to help locate components.              
*                
*                0R Links
*                --------
*                Remove  - R29, R40, R44. Fit  - R30, R41, R45. 
*                Note that these links connect the CSI00 SO, SI and SCK lines to the LIN transceiver
*                and are required for successful operation of the LIN_Master and LIN_Slave samples.
*                To use this RSK in LIN mode reverse these 0R link changes.
*                
*                The locations of these links are just below the left side of J3.
*
*                Microcontroller Pin Header Links
*                --------
*                JA2-6  (SO00)   <-->  JA6-12 (SI10)
*                JA2-8  (SI00)   <-->  JA6-9  (SO01)
*                JA2-10 (SCK00n) <-->  JA6-11 (SCK01n)
*               
* Instructions :
*
*             1. Build and download the sample code to the RSK.
*
*             2. Open the open the source file r_cg_sau_user.c and right click the variable 
                 g_csi00_rxbuffer on line 82 and select "Register to Watch1".
                 Repeat for variable g_csi10_rxbuffer.
*
*             4. Click the 'Go' button to start the program execution. 
*                The name of the sample ("SSER") will be displayed on the LCD.
*
*             5. Press SW1 to start the test.
*
*             6. The sample will display " OK" for pass, " XXX" for fail or "ERRx" for communication errors.
*
*             7. You can observe the contents of g_csi00_rxbuffer being filled
*                with the contents of g_csi10_txbuffer. The contents should 
*                match. The same should be done regarding g_csi00_txbuffer and 
*                g_csi10_rxbuffer.
*                This can be done by opening the 'Watch1' window from the menu bar:
*                    View > Watch > Watch1
*                    Add the 'g_csi00_rxbuffer' global variable to the 'Watch1' window.
*                    Add the 'g_csi10_rxbuffer' global variable to the 'Watch1' window.
*
*             8. If the LCD reports "ERRx", or "XXX", then check the resistor placement and the wire links. 
*
***********************************************************************************************************************/
/***********************************************************************************************************************
* History      : 16th Oct 2013 Ver. 1.00 First Release
***********************************************************************************************************************/
